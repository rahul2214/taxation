rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin by reading their role from their customer profile.
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/customers/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the request is from the owner of the document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'customers' collection
    match /customers/{userId} {
      // Allow admin to read/write any customer document.
      // Allow users to read/write their own document.
      allow read, write: if isAdmin() || isOwner(userId);
    }
    
    match /customers/{path=**} {
        allow list: if isAdmin();
    }

    // Rules for the 'taxDocuments' subcollection
    match /customers/{userId}/taxDocuments/{docId} {
      // Allow owners to manage their own tax documents.
      allow read, create, delete: if isOwner(userId);
      // Admins can read tax documents (e.g., for processing).
      allow read: if isAdmin();
    }

    // Rules for top-level 'appointments' collection
    match /appointments/{appointmentId} {
      // Any user (authenticated or not) can create an appointment.
      allow create: if true;
      // Admins can read/write any appointment.
      allow read, write: if isAdmin();
    }
    
    match /appointments/{path=**} {
        allow list: if isAdmin();
    }

    // Rules for top-level 'referrals' collection
    match /referrals/{referralId} {
        // Any user (authenticated or not) can create a referral.
        allow create: if true;
        // Admins can read/write any referral.
        allow read, write: if isAdmin();
    }
    
    match /referrals/{path=**} {
        allow list: if isAdmin();
    }
    
    // Rules for 'siteSettings' collection
    match /siteSettings/{settingId} {
        // All users can read site settings (e.g., to get form URLs).
        allow read: if true;
        // Only admins can write to site settings.
        allow write: if isAdmin();
    }
  }
}
